
# Define a programmer/JTAG adapter
# This is Veiko's FT2232D based programmer
# https://bitbucket.org/rebane/ft2232d

# Default programmer
PROGRAMMER_CONFIG       ?= /etc/openocd_interface_rebane.cfg
# Default parts conf
PROGRAMMER_PARTNO       ?= target/efm32.cfg
# Default transport - swd or jtag
PROGRAMMER_TRANSPORT    ?= swd
# Enable verification, set it to empty string, to disable
PROGRAMMER_VERIFY       ?= verify
# Series 2 special magic
PROGRAMMER_WORK_SETUP   ?= "\$$_TARGETNAME configure -work-area-phys 0x20000000 -work-area-size \$$_WORKAREASIZE -work-area-backup 0"

# Choose a programmer to use
ifneq ($(PROGRAMMER_ARGUMENT),)
  # Command line argument overrides all else
  FTDI_ID := $(PROGRAMMER_ARGUMENT)
else ifeq ($(FTDI_ID),)
  # Environment variable FTDI_ID not set anywhere
  $(call pInfo,Set programmer ID in environment variable FTDI_ID or variable FTDI_ID in Makefile.private to flash devices)
endif

$(call pDbg,Using programmer: $(FTDI_ID))
# Ensure the variable reaches spawned shells
export FTDI_ID

# Wiggle the reset pin to reset the chip, get debug access for a short while, if pins used for other things
OCD_HW_RST_CMD := openocd -f $(PROGRAMMER_CONFIG) $(PROGRAMMER_RESET_ARGS) -c "transport select $(PROGRAMMER_TRANSPORT)" -c "adapter_khz 1000" -c init -c "ftdi_set_signal nSRST 1" -c "sleep 1000" -c "ftdi_set_signal nSRST 0" -c "sleep 1000" -c shutdown

# HW reset somehow blocks swd sometimes, need to just poke OpenOCD before doing actual work
OCD_DUMMY_CMD := openocd -f $(PROGRAMMER_CONFIG) $(PROGRAMMER_INSTALL_ARGS) -c "transport select $(PROGRAMMER_TRANSPORT)" -f $(PROGRAMMER_PARTNO) -c init -c shutdown || true

# Actual programmer commands depend on the chip and series
ifeq ($(EFR32_SERIES),1)
  $(call includeJtag,ft2232d-efr32s1)
else
  ifeq ($(EFR32_SERIES),2)
    $(call includeJtag,ft2232d-efr32s2)
  else
    $(error EFR32_SERIES not defined or not supported! EFR32_SERIES=$(EFR32_SERIES))
  endif
endif

.PHONY: install program reboot restart reset install-sig erase-sig
